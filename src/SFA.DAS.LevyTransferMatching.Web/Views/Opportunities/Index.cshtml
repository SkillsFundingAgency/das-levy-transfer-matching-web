@using Microsoft.AspNetCore.Routing
@using SFA.DAS.LevyTransferMatching.Domain.Types
@using SFA.DAS.LevyTransferMatching.Web.Models.Opportunities
@model SFA.DAS.LevyTransferMatching.Web.Models.Opportunities.IndexViewModel
@{
    ViewData["Title"] = "Search funding opportunities";
    ViewBag.GaData.Vpv = "/opportunities";
    ViewBag.ZenDeskLabel = "LTM-R-searchoppty";
}
<main class="govuk-main-wrapper govuk-main-wrapper--auto-spacing" id="main-content">
    <h1 class="govuk-heading-xl">
        Search funding opportunities
    </h1>
    <div class="govuk-grid-row">
        <div class="govuk-grid-column-two-thirds">
            <p>
                Large businesses that want to fund the apprenticeships of other businesses can set funding criteria to
                show the training they want to support.
            </p>
            <details class="govuk-details" data-module="govuk-details">
                <summary class="govuk-details__summary">
                    <span class="govuk-details__summary-text">Opportunity examples</span>
                </summary>
                <div class="govuk-details__text">
                    <p>
                        <strong>Example 1</strong><br>
                        A large business might choose to fund apprenticeships in construction companies based in
                        Manchester, Liverpool and Leeds.
                    </p>
                    <p>
                        <strong>Example 2</strong><br>
                        A large business might choose to fund digital apprentices in any sector across all of England
                    </p>
                </div>
            </details>
        </div>
    </div>
    <div class="govuk-grid-row">
        <form method="get" id="filterForm">
            <div class="govuk-grid-column-one-third">
                <h2 class="govuk-heading-m">Apply filter</h2>
                <details class="govuk-details" data-module="govuk-details" @(Model.isSectorFilterApplied ? "open" : "")>
                    <summary class="govuk-details__summary">
                        Your business sector
                    </summary>
                    <div class="govuk-details__text">
                        <div class="govuk-form-group">
                            <fieldset class="govuk-fieldset">
                                <legend class="govuk-visually-hidden">
                                    Select one or more business sectors to filter by
                                </legend>
                                <checkbox-list asp-for="Sectors" source="@Model.Sectors"
                                css-class="govuk-checkboxes govuk-checkboxes--small"></checkbox-list>
                            </fieldset>
                        </div>
                    </div>
                </details>
                <button class="govuk-button" data-module="govuk-button" id="opportunity-filter-sector">
                    Update
                    results
                </button>
            </div>
            <div class="govuk-grid-column-two-thirds">
                <h2 class="govuk-heading-m das-search-results__list-item">
                    Showing @Model.Paging.PageStartRow to @Model.Paging.PageEndRow of @Model.Paging.TotalOpportunities opportunities
                </h2>

                <div class="govuk-grid-row das-search-results__list-item">
                    <div class="govuk-grid-column-one-third">&nbsp</div>
                    <div class="govuk-grid-column-two-thirds">
                        <div class="govuk-grid-row">

                            <label class="govuk-label govuk-grid-column-one-half" for="SortBy">Sort opportunities</label>
                            <select class="govuk-select govuk-grid-column-one-half" id="SortBy" name="SortBy">
                                <option value="@OpportunitiesSortBy.ValueHighToLow" selected="@(Model.SortBy == OpportunitiesSortBy.ValueHighToLow.ToString())">Value (high to low)</option>
                                <option value="@OpportunitiesSortBy.ValueLowToHigh" selected="@(Model.SortBy == OpportunitiesSortBy.ValueLowToHigh.ToString())">Value (low to high)</option>
                                <option value="@OpportunitiesSortBy.MostRecent" selected="@(Model.SortBy == OpportunitiesSortBy.MostRecent.ToString())">Most recent</option>
                                <option value="@OpportunitiesSortBy.AtoZ" selected="@(Model.SortBy == OpportunitiesSortBy.AtoZ.ToString())">A to Z</option>
                                <option value="@OpportunitiesSortBy.ZtoA" selected="@(Model.SortBy == OpportunitiesSortBy.ZtoA.ToString())">Z to A</option>
                            </select>
                        </div>
                    </div>
                </div>


                @if (Model.Opportunities.Count == 0)
                {
                    <div class="das-highlight">
                        <h3 class="govuk-heading-m">There are no results</h3>
                        <p class="govuk-!-margin-bottom-0">Try selecting different criteria options.</p>
                    </div>
                }
                else
                {
                    <div class="das-search-results">
                        <ol class="das-search-results__list">
                            @foreach (var opportunity in Model.Opportunities)
                            {
                                var routeValues = new RouteValueDictionary
                                {
                                    { "page", Model.Paging.Page },
                                    { "SortBy", Model.SortBy },
                                    {"CommaSeparatedSectors", Model.CommaSeparatedSectors },
                                    {"EncodedPledgeId",opportunity.ReferenceNumber }
                                };

                                <li class="das-search-results__list-item">
                                    <h2 class="govuk-heading-m das-search-results__heading govuk-!-margin-bottom-0">
                                        <a href="@Url.Action("Detail", routeValues)"
                                           class="das-search-results__link">
                                            @opportunity.EmployerName
                                            (@opportunity.ReferenceNumber)
                                        </a>
                                    </h2>
                                    <p class="govuk-hint">up to @opportunity.DisplayAmount available</p>
                                    <ul class="govuk-list govuk-!-margin-bottom-0">
                                        <li>
                                            <strong>Locations: </strong>
                                            <span class="das-!-color-dark-grey">@opportunity.Locations</span>
                                        </li>
                                        <li>
                                            <strong>Sectors: </strong>
                                            <span class="das-!-color-dark-grey">@opportunity.Sectors</span>
                                        </li>
                                        <li>
                                            <strong>Type of role: </strong>
                                            <span class="das-!-color-dark-grey">@opportunity.JobRoles</span>
                                        </li>
                                        <li>
                                            <strong>Levels: </strong>
                                            <span class="das-!-color-dark-grey">@opportunity.Levels</span>
                                        </li>
                                    </ul>
                                </li>
                            }
                        </ol>
                    </div>
                }

                @if (Model.Paging.ShowPageLinks)
                {
                    <nav role="navigation" aria-label="Pagination">

                        <ul class="das-pagination">
                            @foreach (var pageLink in Model.Paging.PageLinks)
                            {
                                <li class="das-pagination__item">
                                    <a class="das-pagination__link @(pageLink.IsCurrent.HasValue && pageLink.IsCurrent.Value ? "current" : "")"
                                       asp-route="opportunities" asp-all-route-data="@pageLink.RouteData"
                                       aria-current="@pageLink.IsCurrent" aria-label="@pageLink.AriaLabel">
                                        @pageLink.Label
                                    </a>
                                </li>
                            }
                        </ul>
                    </nav>
                }

            </div>
        </form>
    </div>
</main>