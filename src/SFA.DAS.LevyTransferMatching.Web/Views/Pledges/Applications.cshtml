@using SFA.DAS.LevyTransferMatching.Domain.Extensions
@using SFA.DAS.LevyTransferMatching.Web.Extensions
@model SFA.DAS.LevyTransferMatching.Web.Models.Pledges.ApplicationsViewModel
@inject SFA.DAS.EmployerUrlHelper.ILinkGenerator LinkGenerator
@{
    ViewData["Title"] = "Pledge Applications";
    var breadCrumbs = new List<Tuple<string, string>>
    {
        new Tuple<string, string>(LinkGenerator.AccountsLink($"accounts/{Model.EncodedAccountId}/teams"), "Home"),
        new Tuple<string, string>(LinkGenerator.FinanceLink($"accounts/{Model.EncodedAccountId}/transfers"), "Your transfers"),
        new Tuple<string, string>($"/accounts/{@Model.EncodedAccountId}/pledges", "My transfer pledges"),
        new Tuple<string, string>("", $"Transfer pledge {@Model.EncodedPledgeId}")
    };
}

<bread-crumb source="@breadCrumbs"></bread-crumb>

<main class="govuk-main-wrapper govuk-main-wrapper--auto-spacing" id="main-content">
    <div class="govuk-width-container">
        
        <partial name="_FlashMessagePartial" />

        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">

                <h1 class="govuk-heading-xl">
                    Transfer pledge @Model.EncodedPledgeId
                </h1>

            </div>

            <div class="govuk-grid-column-one-third">

                @if (Model.Applications.Any())
                {
                    <p><a href="/accounts/@Model.EncodedAccountId/pledges/@Model.EncodedPledgeId/applications/download" class="govuk-link app-download-link">Download applications - <span class="govuk-visually-hidden">in an</span> excel <span class="govuk-visually-hidden">spreadsheet</span></a></p>
                }

            </div>
        </div>
        
        @if (Model.Applications.Any())
        {
            <div class="govuk-inset-text">
                <p>Applications awaiting approval are waiting for you to review and approve or reject. Applicants appreciate a response from you in order to manage their apprenticeships.</p>
            </div>
        }


        <div class="govuk-grid-row">
            <div class="govuk-grid-column-two-thirds">
                 <div class="govuk-button-group">
                    @if (Model.RenderCreatePledgeButton)
                    {
                        <form action="/accounts/@Model.EncodedAccountId/pledges/create/inform" method="get">
                            <button class="govuk-button">
                                Create a new transfer pledge
                            </button>
                        </form>
                    }

                    @if (Model.UserCanClosePledge)
                    {
                        <form action="/accounts/@Model.EncodedAccountId/pledges/@Model.EncodedPledgeId/close" method="get">
                            <button class="govuk-button govuk-link-secondary govuk-button--warning accepted-journey-cancel-button no-margin-top">
                                Close pledge
                            </button>
                        </form>
                    }

                </div>
            </div>
        </div>

        <table class="govuk-table" aria-label="Pledge applications">
            <thead class="govuk-table__head">
                <tr class="govuk-table__row">
                    <th scope="col" class="govuk-table__header applicant">
                        <sortable-column column-name="Applicant" column-label="Applicant" default="false" default-order="Ascending"></sortable-column>
                    </th>
                    <th scope="col" class="govuk-table__header tax-year">
                        <sortable-column column-name="CurrentFinancialYearAmount" column-label="Estimated cost @Model.TaxYear" default="false" default-order="Descending"></sortable-column>
                    </th>
                    <th scope="col" class="govuk-table__header duration" >
                        <sortable-column column-name="Duration" column-label="Typical duration" default="false" default-order="Descending"></sortable-column>
                    </th>
                    <th scope="col" class="govuk-table__header criteria">
                        <sortable-column column-name="CriteriaMatch" column-label="Criteria" default="false" default-order="Descending"></sortable-column>
                    </th>
                    <th scope="col" class="govuk-table__header status" >
                        <sortable-column column-name="Status" column-label="Status" default="false" default-order="Descending"></sortable-column>
                    </th>
                </tr>
            </thead>
            <tbody class="govuk-table__body">
                @{
                    if (Model.Applications != null && Model.Applications.Any())
                    {
                        foreach (var app in Model.Applications)
                        {
                            <tr class="govuk-table__row" data-table-row="one">
                                <td class="govuk-table__cell"><a href="applications/@app.EncodedApplicationId" class="govuk-link">@app.DasAccountName</a></td>
                                <td class="govuk-table__cell">
                                    @app.DisplayAmount
                                </td>
                                <td class="govuk-table__cell">@app.Duration months</td>
                                <td class="govuk-table__cell">
                                    <criteria-list application="@app"></criteria-list>
                                </td>
                                <td class="govuk-table__cell"><strong class="@app.Status.GetCssClassForSender()">@app.Status.GetLabelForSender()</strong></td>
                            </tr>
                        }
                    }

                    else
                    {
                        <tr class="govuk-table__row" data-table-row="one">
                            <td colspan="6" class="govuk-table__cell">No applications received yet</td>
                        </tr>
                    }
            }
        </tbody>
    </table>
    </div>
              
    @if (Model.RenderCreatePledgeButton)
    {
        <div class="govuk-button-group">
            <form action="/accounts/@Model.EncodedAccountId/pledges/create/inform" method="get">
                <button class="govuk-button">
                    Create a new transfer pledge
                </button>
            </form>
        </div>
    }

    <a href="/accounts/@Model.EncodedAccountId/pledges" class="govuk-back-link">Back to my transfer pledges</a>

</main>
