@inject SFA.DAS.EmployerUrlHelper.ILinkGenerator LinkGenerator
@model SFA.DAS.LevyTransferMatching.Web.Models.Applications.ApplicationViewModel

@if (Model.CanUseTransferFunds)
{
<div class="govuk">
    <h2 class="govuk-heading-m">Add apprentices</h2>
        <p>Add details of your apprentices to your account, and authorise payments to your training provider.</p>
        <p>After you have accepted the funding, you will have 3 months to add apprentice details before it expires.</p>
    <p>The apprentice details may be rejected if they exceed the estimated total cost that <strong>@Model.PledgeEmployerAccountName</strong> agreed to fund when they approved your application. If this happens you will be able to amend the apprentice details and send for approval again.</p>
    <h2 class="govuk-heading-m">Before you start</h2>
    <p>You must:</p>
    <ul class="govuk-list govuk-list--bullet">
            <li>have a <b>training provider </b>(<a href="https://findapprenticeshiptraining.apprenticeships.education.gov.uk/" class="govuk-link govuk-link--no-visited-state">find a training provider</a>)</li>
        <li>know the <b>legal name</b> and <b>email address</b> of your apprentice</li>
        <li>know the <b>course name</b> and <b>start date</b></li>
        <li>have <b>authority to act</b> for the organisation that's named on the contract you have with your training provider (<a href="@LinkGenerator.AccountsLink($"accounts/{Model.EncodedAccountId}/agreements")" class="govuk-link govuk-link--no-visited-state">view your organisations</a>)</li>     
        <li>make sure the <b>PAYE scheme</b> that the apprentices will be paid through is added to your account (<a href="@LinkGenerator.AccountsLink($"accounts/{Model.EncodedAccountId}/schemes")" class="govuk-link govuk-link--no-visited-state">view your PAYE schemes</a>)</li>
    </ul>    

    @if (Model.RenderCanUseTransferFundsStartButton)
    {
        <p class="govuk-!-margin-bottom-5 govuk-!-margin-top-5">
            <a href="@LinkGenerator.CommitmentsV2Link($"{Model.EncodedAccountId}/unapproved/legalEntity/create?encodedpledgeapplicationid={Model.EncodedApplicationId}&transferConnectionCode={Model.EncodedSenderPublicAccountId}")"
                   class="govuk-button govuk-!-margin-bottom-0">
                    Start now
                    <svg class="govuk-button__start-icon" xmlns="http://www.w3.org/2000/svg" width="17.5" height="19" viewBox="0 0 33 40" aria-hidden="true" focusable="false">
                        <path fill="currentColor" d="M0 0h13l20 20-20 20H0l20-20z" />
                    </svg>
                </a>               
        </p>
    }
    <p><a href="@Url.Action("applications", "applications", new {encodedAccountId = Model.EncodedAccountId})" class="govuk-link govuk-link--no-visited-state">View my applications</a></p>

    @if (Model.RenderWithdrawAfterAcceptanceButton)
    {
        <hr class="govuk-section-break govuk-section-break--l govuk-section-break--visible">
        <h2 class="govuk-heading-m">Do you want to withdraw this application?</h2>
        <a href="@Url.Action("WithdrawalConfirmation", "applications", new { encodedAccountId = Model.EncodedAccountId, encodedApplicationId = Model.EncodedApplicationId })" class="govuk-button govuk-button--warning" data-module="govuk-button">Withdraw application</a>
    }
</div>
}